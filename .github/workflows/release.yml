name: Release & Publish

on:
  push:
    branches: [main] # Trigger on every push to main branch

jobs:
  release:
    name: Build, Test & Publish Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create GitHub releases
      packages: write # Needed to publish to GitHub Packages
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Auto-increment version
        id: version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Check if this version exists on NPM
          if npm view homework-grader@$CURRENT_VERSION version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already exists on NPM, incrementing patch version..."
            # Auto-increment patch version
            NEW_VERSION=$(node -e "
              const semver = '$CURRENT_VERSION'.split('.');
              semver[2] = String(parseInt(semver[2]) + 1);
              console.log(semver.join('.'));
            ")
            echo "New version: $NEW_VERSION"
            
            # Update package.json with new version
            node -e "
              const pkg = require('./package.json');
              pkg.version = '$NEW_VERSION';
              require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');
            "
            
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "VERSION_BUMPED=true" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT_VERSION is new, proceeding with current version"
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "VERSION_BUMPED=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Build project
        run: pnpm run build
        
      - name: Run tests
        run: |
          # Verify the built CLI works
          timeout 10s node dist/cli.js --help || true
          echo "CLI smoke test passed"
          
      - name: Commit version bump
        if: steps.version.outputs.VERSION_BUMPED == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }} [skip ci]"
          git push origin main
          
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://npm.pkg.github.com'
          scope: '@trancethehuman'
          
      - name: Publish to GitHub Packages
        run: |
          # Create a temporary package.json with GitHub Packages scope
          cp package.json package.json.backup
          node -e "
            const pkg = require('./package.json');
            pkg.name = '@trancethehuman/' + pkg.name;
            pkg.publishConfig = { registry: 'https://npm.pkg.github.com' };
            require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
          "
          npm publish
          # Restore original package.json
          mv package.json.backup package.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Git Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## üöÄ Release v${{ steps.version.outputs.version }}
            
            **Auto-published from commit:** ${{ github.sha }}
            
            ### Installation
            ```bash
            npm install -g homework-grader@${{ steps.version.outputs.version }}
            # or
            npx homework-grader@${{ steps.version.outputs.version }}
            ```
            
            ### What's New
            - Latest changes from main branch
            - Built and tested on Node.js 22+
            - Automatically published on every push
            
            ### Links
            - üì¶ [NPM Package](https://www.npmjs.com/package/homework-grader)
            - üìö [Documentation](https://github.com/trancethehuman/homework-grader#readme)
            - üêõ [Report Issues](https://github.com/trancethehuman/homework-grader/issues)
          draft: false
          prerelease: false